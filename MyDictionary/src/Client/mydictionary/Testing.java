/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.mydictionary;

import Server.Models.WordModel;
import Server.MyServer.I_WordModel;
import Server.ObjectInfos.Word;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author tangminhtin
 */
public class Testing extends javax.swing.JFrame {

    EnEnDictionary parent;  // Declare parent
//    WordModel wm;       // Declare vm
    ArrayList<Word> theTest;        // Declare the test
    ArrayList<String> userInput;    // Declare input
    DefaultListModel<String> theModel; // Declare theModel
    
        I_WordModel wm;

    

    int total = 0;  // Store total
    int wordIndex = -1; // Store wordIndex
    int correct = 0; // Store correct

    /**
     * Creates new form Testing
     *
     * @param parent parent
     * @param wm word model
     * @param theTest theTest
     * @param userInput userInput
     */
    public Testing(EnEnDictionary parent, I_WordModel wm, ArrayList<Word> theTest, ArrayList<String> userInput) {
        initComponents();
        this.setLocationRelativeTo(null);   // Set center frame
        // Set logo frame
        this.setIconImage(getToolkit().getDefaultToolkit().getImage(getClass().getResource("/Client/img/logo.png")));

        this.parent = parent; // Initialize parent
        this.wm = wm;   // Initialize wm
        this.theTest = theTest; // Initialize theTest
        this.userInput = userInput; // Initialize userInput

        this.theModel = new DefaultListModel<>(); // Initialize theModel
        lstIncorrectAnswers.setModel(theModel); // Set model
    }

    /**
     * Refresh data
     */
    public void refresh() {
        total = theTest.size(); // Total question
        wordIndex = 0;  // Index of word
        correct = 0;    // Number of correct
        theModel.removeAllElements();   // Clear all element
        btnNext.setText("Next"); // Set text
        updateTesting();    // Udpate Testing
    }

    /**
     * Update testing
     */
    private void updateTesting() {
        int numOfTest = wordIndex;  // Number of testing

        lblCurrentWord.setText(((wordIndex == theTest.size()) ? wordIndex : wordIndex + 1) + "/" + total); // Set current word
        lblCorrectWord.setText(correct + "");   // Set correct word
        lblIncorrectWord.setText((numOfTest - correct) + "");   // Set incorrect word
        lblPercentWord.setText(String.format("%.2f", correct * 100 / (float) total) + "%"); // Set percent

        if (wordIndex != theTest.size()) {
            try {
                Word word = theTest.get(wordIndex);
                int wordID = word.getId();  // Get id of word
                
                String meaning = wm.showMeaningOnly(wordID);    // Get meaning
                txtpContent.setText(meaning);   // Set meaning
                txtUserInput.setText("");   // Set user input to empty
            } catch (RemoteException ex) {
                Logger.getLogger(Testing.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMeaning = new javax.swing.JLabel();
        spContent = new javax.swing.JScrollPane();
        txtpContent = new javax.swing.JTextPane();
        txtUserInput = new javax.swing.JTextField();
        lblAnswer = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        pnllTestInfo = new javax.swing.JPanel();
        lblCurrent = new javax.swing.JLabel();
        lblCorrect = new javax.swing.JLabel();
        lblIncorrect = new javax.swing.JLabel();
        lblPercent = new javax.swing.JLabel();
        lblCurrentWord = new javax.swing.JLabel();
        lblCorrectWord = new javax.swing.JLabel();
        lblIncorrectWord = new javax.swing.JLabel();
        lblPercentWord = new javax.swing.JLabel();
        pnlIncorrectAnswers = new javax.swing.JPanel();
        spIncorrectAnswers = new javax.swing.JScrollPane();
        lstIncorrectAnswers = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Testing");
        setName("frmTesting"); // NOI18N

        lblMeaning.setText("Meaning");

        txtpContent.setEditable(false);
        txtpContent.setContentType("text/html"); // NOI18N
        txtpContent.setPreferredSize(new java.awt.Dimension(0, 18));
        spContent.setViewportView(txtpContent);

        lblAnswer.setText("Enter your word here");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        pnllTestInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Information"));

        lblCurrent.setText("Current word:");

        lblCorrect.setText("Correct:");

        lblIncorrect.setText("Incorrect:");

        lblPercent.setText("Percent:");

        lblCurrentWord.setText("5/10");

        lblCorrectWord.setText("4");

        lblIncorrectWord.setText("1");

        lblPercentWord.setText("40%");

        javax.swing.GroupLayout pnllTestInfoLayout = new javax.swing.GroupLayout(pnllTestInfo);
        pnllTestInfo.setLayout(pnllTestInfoLayout);
        pnllTestInfoLayout.setHorizontalGroup(
            pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnllTestInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnllTestInfoLayout.createSequentialGroup()
                        .addComponent(lblCurrent)
                        .addGap(18, 18, 18)
                        .addComponent(lblCurrentWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnllTestInfoLayout.createSequentialGroup()
                        .addComponent(lblCorrect)
                        .addGap(54, 54, 54)
                        .addComponent(lblCorrectWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnllTestInfoLayout.createSequentialGroup()
                        .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIncorrect)
                            .addComponent(lblPercent))
                        .addGap(44, 44, 44)
                        .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnllTestInfoLayout.createSequentialGroup()
                                .addComponent(lblPercentWord, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                .addGap(17, 17, 17))
                            .addComponent(lblIncorrectWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnllTestInfoLayout.setVerticalGroup(
            pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnllTestInfoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrent)
                    .addComponent(lblCurrentWord))
                .addGap(10, 10, 10)
                .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorrect)
                    .addComponent(lblCorrectWord))
                .addGap(10, 10, 10)
                .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIncorrect)
                    .addComponent(lblIncorrectWord))
                .addGap(10, 10, 10)
                .addGroup(pnllTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPercent)
                    .addComponent(lblPercentWord))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pnlIncorrectAnswers.setBorder(javax.swing.BorderFactory.createTitledBorder("Incorrect answers"));

        lstIncorrectAnswers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        spIncorrectAnswers.setViewportView(lstIncorrectAnswers);

        javax.swing.GroupLayout pnlIncorrectAnswersLayout = new javax.swing.GroupLayout(pnlIncorrectAnswers);
        pnlIncorrectAnswers.setLayout(pnlIncorrectAnswersLayout);
        pnlIncorrectAnswersLayout.setHorizontalGroup(
            pnlIncorrectAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spIncorrectAnswers)
        );
        pnlIncorrectAnswersLayout.setVerticalGroup(
            pnlIncorrectAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spIncorrectAnswers)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(txtUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                    .addComponent(lblMeaning, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnswer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spContent))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnllTestInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlIncorrectAnswers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMeaning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spContent, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblAnswer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnllTestInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(pnlIncorrectAnswers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Next question
     *
     * @param evt click
     */
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (wordIndex < theTest.size()) {
            Word word = theTest.get(wordIndex); // Get word
            if (txtUserInput.getText().equals(word.getText())) {    // Check word is correct or not
                correct++;  // Increase correct
            } else {
                String str = "";    // Show incorrect word
                str += (wordIndex + 1) + ". Correct: " + word.getText() + "# Wrong answer: " + txtUserInput.getText();
                theModel.addElement(str);   // Add element to list
            }
            wordIndex++;        // Increase wordIndex
            if (wordIndex == theTest.size() - 1) {
                btnNext.setText("Finish");  // Set text Finish

            } else if (wordIndex == theTest.size()) {
                txtUserInput.setText("");   // Clear text
                btnNext.setText("Close");   // Set text Close
            }
            updateTesting();    // Update question
        } else {
            this.setVisible(false); // Hide current frame
        }
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Testing().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel lblAnswer;
    private javax.swing.JLabel lblCorrect;
    private javax.swing.JLabel lblCorrectWord;
    private javax.swing.JLabel lblCurrent;
    private javax.swing.JLabel lblCurrentWord;
    private javax.swing.JLabel lblIncorrect;
    private javax.swing.JLabel lblIncorrectWord;
    private javax.swing.JLabel lblMeaning;
    private javax.swing.JLabel lblPercent;
    private javax.swing.JLabel lblPercentWord;
    private javax.swing.JList<String> lstIncorrectAnswers;
    private javax.swing.JPanel pnlIncorrectAnswers;
    private javax.swing.JPanel pnllTestInfo;
    private javax.swing.JScrollPane spContent;
    private javax.swing.JScrollPane spIncorrectAnswers;
    private javax.swing.JTextField txtUserInput;
    private javax.swing.JTextPane txtpContent;
    // End of variables declaration//GEN-END:variables
}
