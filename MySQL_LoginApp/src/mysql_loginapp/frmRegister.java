/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysql_loginapp;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author tangminhtin
 */
public class frmRegister extends javax.swing.JFrame {

    /**
     * Creates new form frmRegister
     */
    public frmRegister() {
        initComponents();
        this.setLocationRelativeTo(null); // Set center frame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        lblFullname = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pfConfirmPassword = new javax.swing.JPasswordField();
        pfPassword = new javax.swing.JPasswordField();
        txtFullname = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        txtPhone = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register");

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        lblConfirmPassword.setText("Confirm password");

        lblFullname.setText("Fullname");

        lblGender.setText("Gender");

        lblEmail.setText("Email");

        lblPhone.setText("Phone");

        rdMale.setSelected(true);
        rdMale.setText("Male");
        rdMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMaleActionPerformed(evt);
            }
        });

        rdFemale.setText("Female");
        rdFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdFemaleActionPerformed(evt);
            }
        });

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lblMessage.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConfirmPassword)
                            .addComponent(lblPassword)
                            .addComponent(lblPhone)
                            .addComponent(lblEmail)
                            .addComponent(lblFullname)
                            .addComponent(lblUsername)
                            .addComponent(lblGender))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pfPassword)
                            .addComponent(pfConfirmPassword)
                            .addComponent(txtUsername)
                            .addComponent(txtFullname)
                            .addComponent(txtEmail)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdMale)
                                .addGap(10, 10, 10)
                                .addComponent(rdFemale)
                                .addGap(0, 117, Short.MAX_VALUE))
                            .addComponent(txtPhone)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(btnRegister)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirmPassword)
                    .addComponent(pfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFullname)
                    .addComponent(txtFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(rdMale)
                    .addComponent(rdFemale))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhone)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Radio male button
     *
     * @param evt
     */
    private void rdMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMaleActionPerformed
        // If radio male is checked, then uncheck radio female button
        if (rdMale.isSelected()) {
            rdFemale.setSelected(false);
        } else { // Otherwise check radio female button
            rdFemale.setSelected(true);
        }
    }//GEN-LAST:event_rdMaleActionPerformed

    /**
     * Radio female button
     *
     * @param evt
     */
    private void rdFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdFemaleActionPerformed
        // If radio female is checked, then uncheck radio male button
        if (rdFemale.isSelected()) {
            rdMale.setSelected(false);
        } else { // Otherwise check radio male button
            rdMale.setSelected(true);
        }
    }//GEN-LAST:event_rdFemaleActionPerformed

    /**
     * Action perform register account after user clicked
     *
     * @param evt
     */
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        try {
            DBManagement db = new DBManagement();  // Create new db
            Connection connection = db.getConnection(); // Store connection
            Statement statement = connection.createStatement(); // Store SQL statement

            String username = txtUsername.getText();    // Get username
            String password = String.valueOf(pfPassword.getPassword()); // Get password
            String confirmPassword = String.valueOf(pfConfirmPassword.getPassword());   // Get confirm password
            String fullname = txtFullname.getText();    // Get fullname
            int gender;     // Store gender(0/1)
            String email = txtEmail.getText();  // Get email
            String phone = txtPhone.getText();  // Get phone

            if (rdMale.isSelected()) {  // If rdMale is checked
                gender = 0; // Then set gender is 0 (male)
            } else {    // Otherwise set 1 (female)
                gender = 1;
            }

            // Check all field of input is empty or not, show message and return
            if (username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()
                    || fullname.isEmpty() || email.isEmpty() || phone.isEmpty()) {
                lblMessage.setText("All field are required!");
                return;
            }

            // Check if password less 8 or greater 20, show error message and return
            if (password.length() < 8 || password.length() > 20) {
                lblMessage.setText("Password must be 8 -> 20 characters!");
                return;
            } else {
                // Check password and confirm password if not match show error message and return
                if (!password.equals(confirmPassword)) {
                    lblMessage.setText("Confirm password not match!");
                    return;
                }
            }

            // Check email is valid or not, if not, then show error message and return
            if (!email.matches("^[a-zA-Z0-9_+&*-]+(?:\\." + "[a-zA-Z0-9_+&*-]+)*@"
                    + "(?:[a-zA-Z0-9-]+\\.)+[a-z" + "A-Z]{2,7}$")) {
                lblMessage.setText("Email is invalid!");
                return;
            }

            // Check phone is valid or not, if not, then show error message and return
            if (!phone.matches("\\d{10}") || phone.matches("\\d{3}\\-\\d{3}\\-\\d{4}") || phone.matches("\\(\\d{3}\\)\\-\\d{3}\\-\\d{4}")
                    || phone.matches("\\d{3}\\.\\d{3}\\.\\d{4}") || phone.matches("\\d{3} \\d{3} \\d{4}")) {
                lblMessage.setText("Phone is invalid");
                return;
            }

            String sqlSelectAll = "SELECT * FROM `Account`";    // SQL for get all value in database
            ResultSet resultSet = statement.executeQuery(sqlSelectAll); // Store all result after execute query
            ArrayList<Account> accounts = new ArrayList<>();    // Store list of accounts

            while (resultSet.next()) {
                // Add all accounts of database to array list
                accounts.add(new Account(resultSet.getString("username"), resultSet.getString("password"),
                        resultSet.getString("fullname"), resultSet.getInt("gender"),
                        resultSet.getString("email"), resultSet.getString("phone")));
            }

            // Check username, email and phone is exist or not, if exist then show error message and return
            for (Account acc : accounts) {
                if (acc.getUsername().equals(username) || acc.getEmail().equalsIgnoreCase(email) || acc.getPhone().equals(phone)) {
                    lblMessage.setText("Username/password/phone is existed!");
                    return;
                }
            }

            // SQL for insert data into database
            String sqlInsert = "INSERT INTO `Account`(`username`, `password`, `fullname`, `gender`, `email`, `phone`) "
                    + "VALUES ('" + username + "', MD5('" + password + "'),'" + fullname + "', "
                    + gender + ", '" + email + "', '" + phone + "')";
            statement.execute(sqlInsert);   // Execute SQL
            // Add all information of account to object account
            Account account = new Account(username, password, fullname, gender, email, phone);

            new frmInfo(account).setVisible(true);  // Open frame Info and passing object account
            this.dispose(); // Close current frame

            db.closeConnection();   // Close connection
        } catch (SQLException ex) {
            Logger.getLogger(frmRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frmRegister().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFullname;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pfConfirmPassword;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

}
