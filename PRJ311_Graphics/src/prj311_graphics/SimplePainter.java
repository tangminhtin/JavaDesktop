/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prj311_graphics;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseEvent;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.event.MouseInputAdapter;

/**
 *
 * @author TangMinhTin CE130438
 */
public class SimplePainter extends javax.swing.JFrame {

    private PaperDragDrop p;    // Declare object p
    private int startX, startY, endX, endY; // Store startX, startY, endX, endY
    private Color lineColor, fillColor; // Store line color and fill color
    private String type = "line";   // Store type of shape and set default type is line
    private MouseInputAdapter dragDropListener; // Create event dragDropListener

    /**
     * Creates new form SimplePainter
     */
    public SimplePainter() {
        initComponents();

        // Set icon for frame
        this.setIconImage(getToolkit().getDefaultToolkit().getImage(getClass().getResource("../img/icon.png")));
        // Set frame to center
        this.setLocationRelativeTo(null);

        p = new PaperDragDrop();    // Create new object p
        pnlPaper.setSize(800, 400);     // Set size of pnlPaper is 800x400
        pnlPaper.setLayout(new BorderLayout()); // Set layout for pnlPaper
        pnlPaper.add(p, BorderLayout.CENTER);   // Add object p to pnlPaper

        // Add event dragDropListener
        dragDropListener = new MouseInputAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                startX = e.getX();  // Get start axis x
                startY = e.getY();  // Get start axis y
                // Set axis startX, startY , end x, end y to label
                lblStatus.setText("[" + startX + ", " + startY + "]; [" + startX + ", " + startY + "]");
                // Draw shape
                p.addShape(type, startX, startY, 1, 1, sldLineThickness.getValue(), lineColor, fillColor);
            }

            /**
             * Status of mouse dragged
             *
             * @param e
             */
            @Override
            public void mouseDragged(MouseEvent e) {
                changeAxis(e);  // Call method to change axis startX, startY and endX, endY, then draw shape
            }

            /**
             * Status of mouse released
             *
             * @param e
             */
            @Override
            public void mouseReleased(MouseEvent e) {
                changeAxis(e); // Call method to change axis startX, startY and endX, endY, then draw shape

            }

        };

        // Add event and add motion listener
        p.addMouseListener(dragDropListener);
        p.addMouseMotionListener(dragDropListener);

    }

    private void changeAxis(MouseEvent e) {

        endX = e.getX();    // Get end axis x
        endY = e.getY();    // Get end axis y

        int x = startX < endX ? startX : endX;  // Store axis x if startX or endX is larger
        int y = startY < endY ? startY : endY;  // Store axis y if startY or endY is larger

        int width = endX - startX + 1;  // Set width 
        if (width < 0) {    // If width is less than 0
            width = -width; // Change width
        }
        int height = endY - startY + 1; // Set height
        if (height < 0) {       // If height is less than 0
            height = -height;   // Change height
        }

        // Set axis startX, startY, endX, endY to label
        lblStatus.setText("[" + startX + ", " + startY + "]; [" + endX + ", " + endY + "]");
        p.removeLast(); // Call method to remove last shape
        if (type.equals("line")) {  // If type is line then draw line
            p.addShape(type, startX, startY, endX - startX + 1, endY - startY + 1, sldLineThickness.getValue(), lineColor, fillColor);
        } else {
            // Otherwise draw shape
            p.addShape(type, x, y, width, height, sldLineThickness.getValue(), lineColor, fillColor);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDrawingTool = new javax.swing.JPanel();
        btnLine = new javax.swing.JButton();
        btnRect = new javax.swing.JButton();
        btnOval = new javax.swing.JButton();
        sldLineThickness = new javax.swing.JSlider();
        btnColor = new javax.swing.JButton();
        btnFillColor = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblLineThickness = new javax.swing.JLabel();
        pnlPaper = new javax.swing.JPanel();
        pnlStatus = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Painter");

        pnlDrawingTool.setBorder(javax.swing.BorderFactory.createTitledBorder("Drawing tools"));

        btnLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/line.png"))); // NOI18N
        btnLine.setPreferredSize(new java.awt.Dimension(50, 50));
        btnLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineActionPerformed(evt);
            }
        });

        btnRect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rect.png"))); // NOI18N
        btnRect.setPreferredSize(new java.awt.Dimension(50, 50));
        btnRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRectActionPerformed(evt);
            }
        });

        btnOval.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/oval.png"))); // NOI18N
        btnOval.setPreferredSize(new java.awt.Dimension(50, 50));
        btnOval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOvalActionPerformed(evt);
            }
        });

        sldLineThickness.setMajorTickSpacing(10);
        sldLineThickness.setMinorTickSpacing(5);
        sldLineThickness.setPaintTicks(true);
        sldLineThickness.setSnapToTicks(true);
        sldLineThickness.setToolTipText("");
        sldLineThickness.setValue(15);

        btnColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lineColor.png"))); // NOI18N
        btnColor.setPreferredSize(new java.awt.Dimension(50, 50));
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });

        btnFillColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fill.png"))); // NOI18N
        btnFillColor.setPreferredSize(new java.awt.Dimension(50, 50));
        btnFillColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFillColorActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clear.png"))); // NOI18N
        btnClear.setPreferredSize(new java.awt.Dimension(50, 50));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblLineThickness.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLineThickness.setText("Line Thickness");

        javax.swing.GroupLayout pnlDrawingToolLayout = new javax.swing.GroupLayout(pnlDrawingTool);
        pnlDrawingTool.setLayout(pnlDrawingToolLayout);
        pnlDrawingToolLayout.setHorizontalGroup(
            pnlDrawingToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDrawingToolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                .addComponent(lblLineThickness, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sldLineThickness, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFillColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlDrawingToolLayout.setVerticalGroup(
            pnlDrawingToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDrawingToolLayout.createSequentialGroup()
                .addGroup(pnlDrawingToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFillColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
            .addComponent(sldLineThickness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlDrawingToolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLineThickness, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPaper.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlPaper.setToolTipText("");
        pnlPaper.setPreferredSize(new java.awt.Dimension(536, 536));

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );

        pnlStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblStatus.setText("[0, 0]; [0, 0]");

        javax.swing.GroupLayout pnlStatusLayout = new javax.swing.GroupLayout(pnlStatus);
        pnlStatus.setLayout(pnlStatusLayout);
        pnlStatusLayout.setHorizontalGroup(
            pnlStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlStatusLayout.setVerticalGroup(
            pnlStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDrawingTool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPaper, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
                    .addComponent(pnlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDrawingTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method will change type to line
     *
     * @param evt
     */
    private void btnLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineActionPerformed
        type = "line";
    }//GEN-LAST:event_btnLineActionPerformed

    /**
     * Method will change type to rectangle
     *
     * @param evt
     */
    private void btnRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRectActionPerformed
        type = "rect";
    }//GEN-LAST:event_btnRectActionPerformed

    /**
     * Method will change type to oval
     *
     * @param evt
     */
    private void btnOvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOvalActionPerformed
        type = "oval";
    }//GEN-LAST:event_btnOvalActionPerformed

    /**
     * Method will open color chooser for line color
     *
     * @param evt
     */
    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
        lineColor = JColorChooser.showDialog(this, "Choose line color", Color.BLACK);
    }//GEN-LAST:event_btnColorActionPerformed

    /**
     * Method will open color chooser for fill color
     *
     * @param evt
     */
    private void btnFillColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFillColorActionPerformed
        fillColor = JColorChooser.showDialog(this, "Choose fill color", Color.WHITE);
    }//GEN-LAST:event_btnFillColorActionPerformed

    /**
     * Method will clear shape
     *
     * @param evt
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        p.clear();
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimplePainter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimplePainter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimplePainter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimplePainter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimplePainter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnColor;
    private javax.swing.JButton btnFillColor;
    private javax.swing.JButton btnLine;
    private javax.swing.JButton btnOval;
    private javax.swing.JButton btnRect;
    private javax.swing.JLabel lblLineThickness;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlDrawingTool;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JPanel pnlStatus;
    private javax.swing.JSlider sldLineThickness;
    // End of variables declaration//GEN-END:variables
}
